/* You can add global styles to this file, and also import other style files */
@import "../node_modules/@swimlane/ngx-datatable/release/index.css";
@import "../node_modules/@swimlane/ngx-datatable/release/assets/icons.css";
@import "../node_modules/@swimlane/ngx-datatable/release/themes/bootstrap.css";

/* You can add global styles to this file, and also import other style files */
// @import "../node_modules/bootstrap/dist/css/bootstrap.min.css";
@import "/assets/scss/global.scss";
@import "/assets/css/theme-gunmetal.css";

// We have to do the import after to override the styles.
@import "../node_modules/ngx-smart-modal/ngx-smart-modal";

.lyralogo {
  max-height: 100px;
  max-width: 350px;
}

.checkbox,
.radio {
  padding-left: 20px;
  margin-bottom: 12px;
}

.checkbox label {
  display: inline-block;
  vertical-align: middle;
  position: relative;
  padding-left: 10px;
}

.checkbox label::before {
  content: "";
  display: inline-block;
  position: absolute;
  width: 19px;
  height: 19px;
  left: 0;
  margin-left: -20px;
  border-radius: 3px;
  opacity: 0.5;
  background-color: #66615b;
  transition: opacity 0.2s linear;
}

.checkbox label::after {
  display: inline-block;
  position: absolute;
  width: 19px;
  height: 19px;
  left: 0;
  top: -2px;
  text-align: center;
  margin-left: -20px;
  font-size: 16px;
  color: #ffffff;
}

.checkbox input[type="checkbox"],
.radio input[type="radio"] {
  opacity: 0;
  z-index: 1;
  cursor: pointer;
  width: 19px;
  height: 19px;
  top: -2px;
}

.checkbox input[type="checkbox"]:checked + label::after,
.checkbox input[type="checkbox"]:not(:disabled):hover + label::after {
  font-family: "FontAwesome";
  content: "\f00c";
}

.checkbox input[type="checkbox"]:checked + label::before {
  opacity: 1;
}

.checkbox input[type="checkbox"]:disabled + label {
  color: #cfcfcf;
}

.checkbox input[type="checkbox"]:disabled + label::before {
  background-color: #cfcfcf;
  cursor: not-allowed;
}

.checkbox.checkbox-circle label::before {
  border-radius: 50%;
}

.checkbox.checkbox-inline {
  margin-top: 0;
}

.checkbox-primary input[type="checkbox"]:checked + label::before {
  background-color: #428bca;
  border-color: #428bca;
}

.checkbox-primary input[type="checkbox"]:checked + label::after {
  color: #fff;
}

.checkbox-danger input[type="checkbox"]:checked + label::before {
  background-color: #d9534f;
  border-color: #d9534f;
}

.checkbox-danger input[type="checkbox"]:checked + label::after {
  color: #fff;
}

.checkbox-info input[type="checkbox"]:checked + label::before {
  background-color: #5bc0de;
  border-color: #5bc0de;
}

.checkbox-info input[type="checkbox"]:checked + label::after {
  color: #fff;
}

.checkbox-warning input[type="checkbox"]:checked + label::before {
  background-color: #f0ad4e;
  border-color: #f0ad4e;
}

.checkbox-warning input[type="checkbox"]:checked + label::after {
  color: #fff;
}

.checkbox-success input[type="checkbox"]:checked + label::before {
  background-color: #5cb85c;
  border-color: #5cb85c;
}

.checkbox-success input[type="checkbox"]:checked + label::after {
  color: #fff;
}

.radio label {
  display: inline-block;
  vertical-align: middle;
  position: relative;
  padding-left: 10px;
}

.radio label::before {
  font-family: "FontAwesome";
  content: "\f10c";
  font-size: 22px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: inline-block;
  position: absolute;
  left: 0;
  top: -5px;
  color: #66615b;
  opacity: 0.5;
  margin-left: -20px;
}

.radio input[type="radio"]:not(:disabled):hover + label::before {
  font-family: "FontAwesome";
  content: "\f192";
  color: #66615b;
  opacity: 0.5;
}

.radio label::after {
  display: inline-block;
  position: absolute;
  font-family: "FontAwesome";
  content: "\f192";
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  opacity: 0;
  left: 0px;
  top: -5px;
  margin-left: -20px;
  font-size: 22px;
  background-color: transparent;
  color: #66615b;
  transition: opacity 0.2s linear;
}

.radio input[type="radio"]:checked + label::after {
  opacity: 1;
}

.radio input[type="radio"]:disabled + label {
  color: #cfcfcf;
}

.radio input[type="radio"]:disabled + label::before,
.radio input[type="radio"]:disabled + label::after {
  color: #cfcfcf;
}

.radio.radio-inline {
  margin-top: 0;
}

.radio-primary input[type="radio"] + label::after {
  background-color: #428bca;
}

.radio-primary input[type="radio"]:checked + label::before {
  border-color: #428bca;
}

.radio-primary input[type="radio"]:checked + label::after {
  background-color: #428bca;
}

.radio-danger input[type="radio"] + label::after {
  background-color: #d9534f;
}

.radio-danger input[type="radio"]:checked + label::before {
  border-color: #d9534f;
}

.radio-danger input[type="radio"]:checked + label::after {
  background-color: #d9534f;
}

.radio-info input[type="radio"] + label::after {
  background-color: #5bc0de;
}

.radio-info input[type="radio"]:checked + label::before {
  border-color: #5bc0de;
}

.radio-info input[type="radio"]:checked + label::after {
  background-color: #5bc0de;
}

.radio-warning input[type="radio"] + label::after {
  background-color: #f0ad4e;
}

.radio-warning input[type="radio"]:checked + label::before {
  border-color: #f0ad4e;
}

.radio-warning input[type="radio"]:checked + label::after {
  background-color: #f0ad4e;
}

.radio-success input[type="radio"] + label::after {
  background-color: #5cb85c;
}

.radio-success input[type="radio"]:checked + label::before {
  border-color: #5cb85c;
}

.radio-success input[type="radio"]:checked + label::after {
  background-color: #5cb85c;
}

.gold {
  color: rgb(190, 150, 86);
}

.ngx-datatable.bootstrap .datatable-footer .datatable-pager a {
  background-color: #424242;
}

// Color of overlay background
$color-overlay: rgba(0, 0, 0, 0.5) !default;

// Position of dialog
$dialog-position-top: 20% !default;

// Transition time
// !! The same as the hideDelay variable defined in ngx-smart-modal.component.ts
$transition-duration: 200ms !default;

// Transition effect
// linear | ease | ease-in | ease-out | ease-in-out
$transition-timing-function: ease-in-out !default;

.nsm-dialog-btn-close {
  border: 0;
  background: none;
  color: #2d2d2d;
  position: absolute;
  top: 16px;
  right: 16px;
  font-size: 1.2em;
  cursor: pointer;
}

// This was really obnoxious I can't seem to override the styles for this stupid thing even with local classes
// had to include the padding here, to make it work.
.la-modal {
  padding: 24px !important;
}
// Adding for the delete modals to be a bit cleaner
.nsm-dialog.nsm-dialog-open {
  padding: 20px;
}

// You would think you could just put these classes in the component.scss and it would work, and you would be wrong.
// I have to put these modal classes here.  It's lame, and I know it.
.bucket-item-quick-edit-modal.nsm-dialog.nsm-dialog-open {
  opacity: 1;
  visibility: visible;
  overflow: auto;
  width: 70%;
  max-width: 80%;
  background-color: #fff;
  border-radius: 2px;
  right: 0;
  left: 0;
  top: 10%;
  margin-bottom: 20px;
  margin-right: auto;
  margin-left: auto;
  padding: 12px;
  -webkit-box-shadow: 0 7px 8px -4px rgba(0, 0, 0, 0.2),
    0 13px 19px 2px rgba(0, 0, 0, 0.14), 0 5px 24px 4px rgba(0, 0, 0, 0.12);
  box-shadow: 0 7px 8px -4px rgba(0, 0, 0, 0.2),
    0 13px 19px 2px rgba(0, 0, 0, 0.14), 0 5px 24px 4px rgba(0, 0, 0, 0.12);
}

// This is basically allowing us to have our modals scroll, and get a size based on their content.
// If you mess with the "position" attribute here, you most likely lose that ability. For instance when adding/editing a bucket item, and
// having a bunch
body.dialog-open {
  position: inherit;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  overflow-y: auto;
}

@media (max-width: 768px) {
  .modal-expander.nsm-dialog.nsm-dialog-open {
    max-height: 80%;
    width: 80%;
    max-width: 80%;
    top: 10%;
    position: absolute;
  }
}

.row-btn {
  margin-left: 15px;
}

.no-margin {
  margin: 0px;
}

.fixed {
  position: fixed;
}

.form-control {
  font-size: 14px;
}

.form-label-center {
  line-height: 3;
}

// Overriding a bunch of the styling for the default jquery notify.  These styles come up when you're presented with the alert component.
.alert {
  opacity: 1;
}

.alert .close {
  color: #676767;
  margin: -2px 0 0 0;
}

.alert span[data-notify="icon"] {
  font-size: 14px;
  color: #676767;
  float: left;
  margin: 2px 15px 0 0;
  left: auto;
  position: unset;
  top: auto;
}

.alert span[data-notify="message"] {
  margin-left: 15px;
  color: #676767;
}

.search-bar {
  border-bottom: 1px solid #ccc;
}
